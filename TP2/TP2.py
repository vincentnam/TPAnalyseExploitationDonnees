import pandas as pd
import numpy as np
import re
csv = pd.read_csv("simplewiki.1000.csv")
print(csv)
list_voc = np.array([])

for ligne in csv["text"]:

    ligne_form = re.sub(r"[^a-zA-Z0-9-à-é-è]+", ' ', ligne).split()
    #print(ligne_form)
    for mot in ligne_form:
        if mot not in list_voc:
            list_voc = np.append(list_voc,mot)


# print(len(list_voc))

matrice_freq = np.zeros((len(list_voc),len(csv)))
compt = 0
for i in range(len(csv["text"])-1):

    ligne_form = re.sub(r"[^a-zA-Z0-9-à-é-è]+", ' ', csv["text"][i]).split()
    for mot in ligne_form:
        matrice_freq[np.where(list_voc==mot)[0][0]-1][i] += 1
        compt +=1


def ESA(u,v):
    return np.dot(u,v)/(np.linalg.norm(u) * np.linalg.norm(v))

#print(ESA(matrice_freq[np.where(list_voc=="fish")[0][0]-1],matrice_freq[np.where(list_voc=="leptodactylid")[0][0]]))

dic = {}
for x in open("glove.6B.50d.txt").readlines():
    x = x.split()
    dic[x[0]]= np.array([float(w) for w in x[1:]])

print([ESA(dic[x],dic["leptodactylus"]) for x in ["frog","dog","fish","bird"]])


phrases = []
for x in open("test/phrase2word.test.input.tsv").readlines():

    x = re.sub(r"[^a-zA-Z0-9-à-é-è]+", ' ', x).split()
    #    print(x[:-1])
    phrases.append(x[:-1])
phrases = np.array(phrases)
print(len(phrases))
dict={}
for phrase in phrases:
    print(phrase)
    for mot in phrase:
        print(mot)
        for mot_aux in phrase :
            print(mot_aux)
            aux = np.array([])
            if(mot!=mot_aux):
                try:
                    aux = np.append(aux,ESA(dic[mot],dic[mot_aux]))
                except:
                    continue
            max_aux=0
            for i in aux:
                if i > max_aux :
                    max_aux=i
            dict[mot]=max_aux
# Définir une façon de faire la similarité d'une phrase (max, mean, min, choix, sim cosinus..)
